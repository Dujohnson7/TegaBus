{"ast":null,"code":"var _jsxFileName = \"D:\\\\AUCA\\\\AUCA INNOVATION CENTER\\\\WebTech\\\\Final\\\\TegaBus\\\\frontend\\\\tegaPortal\\\\src\\\\components\\\\Cards\\\\CardLineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"chart.js/auto\"; // Use this import for Chart.js v3+\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardLineChart() {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWeeklyRevenue = async () => {\n      try {\n        // Get start (Monday) & end (Sunday) of current week\n        const now = new Date();\n        const startOfWeek = new Date(now.setDate(now.getDate() - now.getDay() + 1));\n        startOfWeek.setHours(0, 0, 0, 0);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(endOfWeek.getDate() + 6);\n        endOfWeek.setHours(23, 59, 59, 999);\n        const response = await fetch(`http://localhost:5000/api/reports/date-range?start=${startOfWeek.getTime()}&end=${endOfWeek.getTime()}`, {\n          credentials: \"include\",\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        // Check if response is successful\n        if (!response.ok) {\n          if (response.status === 401) {\n            throw new Error('Unauthorized: Please login again');\n          }\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const tickets = await response.json();\n\n        // Group by day of week (Mon-Sun)\n        const labels = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n        const revenuePerDay = Array(7).fill(0);\n        tickets.forEach(ticket => {\n          const day = new Date(ticket.createdAt).getDay(); // Sunday=0\n          const index = day === 0 ? 6 : day - 1; // shift Sunday to last\n          revenuePerDay[index] += ticket.price || 0;\n        });\n        setChartData({\n          labels,\n          datasets: [{\n            label: \"Revenue (RWF)\",\n            backgroundColor: \"rgba(59,130,246,0.1)\",\n            borderColor: \"rgb(59,130,246)\",\n            data: revenuePerDay,\n            fill: true,\n            tension: 0.4\n          }]\n        });\n        setError(null);\n      } catch (err) {\n        console.error(\"Error fetching revenue:\", err);\n        setError(err.message);\n        setChartData(null); // Clear chart data on error\n      }\n    };\n    fetchWeeklyRevenue();\n  }, []);\n  useEffect(() => {\n    if (!chartData) return;\n    const ctx = document.getElementById(\"line-chart\").getContext(\"2d\");\n    if (window.myLine) window.myLine.destroy();\n    window.myLine = new Chart(ctx, {\n      type: \"line\",\n      data: chartData,\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        legend: {\n          labels: {\n            fontColor: \"white\"\n          },\n          align: \"end\",\n          position: \"bottom\"\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              fontColor: \"white\"\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              fontColor: \"white\",\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n    return () => window.myLine && window.myLine.destroy();\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded bg-blueGray-700\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded-t px-4 py-3 bg-transparent\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-white text-xl font-semibold\",\n        children: \"Revenue Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 flex-auto\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-400 mb-4 p-2 bg-red-900 bg-opacity-20 rounded\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative h-350-px\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"line-chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(CardLineChart, \"g2xM77P2957mOVL4LlqFcOTwJ2s=\");\n_c = CardLineChart;\nvar _c;\n$RefreshReg$(_c, \"CardLineChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","jsxDEV","_jsxDEV","CardLineChart","_s","chartData","setChartData","error","setError","fetchWeeklyRevenue","now","Date","startOfWeek","setDate","getDate","getDay","setHours","endOfWeek","response","fetch","getTime","credentials","headers","ok","status","Error","tickets","json","labels","revenuePerDay","Array","fill","forEach","ticket","day","createdAt","index","price","datasets","label","backgroundColor","borderColor","data","tension","err","console","message","ctx","document","getElementById","getContext","window","myLine","destroy","type","options","maintainAspectRatio","responsive","legend","fontColor","align","position","scales","xAxes","ticks","yAxes","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["D:/AUCA/AUCA INNOVATION CENTER/WebTech/Final/TegaBus/frontend/tegaPortal/src/components/Cards/CardLineChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"chart.js/auto\"; // Use this import for Chart.js v3+\n\nexport default function CardLineChart() {\n  const [chartData, setChartData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchWeeklyRevenue = async () => {\n      try {\n        // Get start (Monday) & end (Sunday) of current week\n        const now = new Date();\n        const startOfWeek = new Date(now.setDate(now.getDate() - now.getDay() + 1));\n        startOfWeek.setHours(0, 0, 0, 0);\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(endOfWeek.getDate() + 6);\n        endOfWeek.setHours(23, 59, 59, 999);\n\n        const response = await fetch(\n          `http://localhost:5000/api/reports/date-range?start=${startOfWeek.getTime()}&end=${endOfWeek.getTime()}`,\n          { \n            credentials: \"include\",\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          }\n        );\n\n        // Check if response is successful\n        if (!response.ok) {\n          if (response.status === 401) {\n            throw new Error('Unauthorized: Please login again');\n          }\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const tickets = await response.json();\n\n        // Group by day of week (Mon-Sun)\n        const labels = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n        const revenuePerDay = Array(7).fill(0);\n\n        tickets.forEach(ticket => {\n          const day = new Date(ticket.createdAt).getDay(); // Sunday=0\n          const index = day === 0 ? 6 : day - 1; // shift Sunday to last\n          revenuePerDay[index] += ticket.price || 0;\n        });\n\n        setChartData({\n          labels,\n          datasets: [\n            {\n              label: \"Revenue (RWF)\",\n              backgroundColor: \"rgba(59,130,246,0.1)\",\n              borderColor: \"rgb(59,130,246)\",\n              data: revenuePerDay,\n              fill: true,\n              tension: 0.4,\n            },\n          ],\n        });\n        setError(null);\n      } catch (err) {\n        console.error(\"Error fetching revenue:\", err);\n        setError(err.message);\n        setChartData(null); // Clear chart data on error\n      }\n    };\n\n    fetchWeeklyRevenue();\n  }, []);\n\n  useEffect(() => {\n    if (!chartData) return;\n\n    const ctx = document.getElementById(\"line-chart\").getContext(\"2d\");\n    if (window.myLine) window.myLine.destroy();\n\n    window.myLine = new Chart(ctx, {\n      type: \"line\",\n      data: chartData,\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        legend: { labels: { fontColor: \"white\" }, align: \"end\", position: \"bottom\" },\n        scales: {\n          xAxes: [{ ticks: { fontColor: \"white\" } }],\n          yAxes: [{ ticks: { fontColor: \"white\", beginAtZero: true } }],\n        },\n      },\n    });\n\n    return () => window.myLine && window.myLine.destroy();\n  }, [chartData]);\n\n  return (\n    <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded bg-blueGray-700\">\n      <div className=\"rounded-t px-4 py-3 bg-transparent\">\n        <h2 className=\"text-white text-xl font-semibold\">Revenue Overview</h2>\n      </div>\n      <div className=\"p-4 flex-auto\">\n        {error && (\n          <div className=\"text-red-400 mb-4 p-2 bg-red-900 bg-opacity-20 rounded\">\n            Error: {error}\n          </div>\n        )}\n        <div className=\"relative h-350-px\">\n          <canvas id=\"line-chart\"></canvas>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}