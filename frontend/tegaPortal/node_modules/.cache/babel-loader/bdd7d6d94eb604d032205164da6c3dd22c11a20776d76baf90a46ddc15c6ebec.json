{"ast":null,"code":"var _jsxFileName = \"D:\\\\AUCA\\\\AUCA INNOVATION CENTER\\\\WebTech\\\\Final\\\\TegaBus\\\\frontend\\\\tegaPortal\\\\src\\\\views\\\\admin\\\\TicketAdd.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\"; // âœ… Fix: just import, no assignment\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TicketAdd() {\n  _s();\n  const history = useHistory();\n  const [ticketData, setTicketData] = useState({\n    names: \"\",\n    email: \"\",\n    phone: \"\",\n    express: \"\",\n    schedule: \"\",\n    busPlateNo: \"\",\n    seatNo: \"\",\n    totalAmount: 0,\n    payState: \"PENDING\",\n    date: \"\"\n  });\n  const [expressList, setExpressList] = useState([]);\n  const [scheduleList, setScheduleList] = useState([]);\n  const [busList, setBusList] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [existingTickets, setExistingTickets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [availableSeats, setAvailableSeats] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const expressId = localStorage.getItem(\"expressId\");\n\n        // Fetch user role\n        let userRole = \"\";\n        const userObj = localStorage.getItem(\"user\");\n        if (userObj) {\n          const user = JSON.parse(userObj);\n          userRole = user.role ? user.role.toUpperCase() : \"\";\n        } else {\n          userRole = localStorage.getItem(\"role\") ? localStorage.getItem(\"role\").toUpperCase() : \"\";\n        }\n        setRole(userRole);\n\n        // Fetch express list with logos\n        const expressResponse = await fetch(\"http://localhost:5000/api/express/all\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!expressResponse.ok) throw new Error(\"Cannot fetch express list\");\n        const expresses = await expressResponse.json();\n        setExpressList(expresses);\n\n        // Fetch schedules and filter\n        const scheduleResponse = await fetch(\"http://localhost:5000/api/tickets/schedule\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"X-Express-Id\": expressId || \"\"\n          }\n        });\n        if (!scheduleResponse.ok) throw new Error(\"Cannot fetch schedule list\");\n        const schedules = await scheduleResponse.json();\n        const today = new Date();\n        const filteredSchedules = schedules.filter(sch => {\n          const scheduleDate = new Date(sch.date);\n          const isNotExpired = scheduleDate >= today;\n          const matchesExpress = userRole === \"SUPER_ADMIN\" ? true : sch.express.id === expressId;\n          return isNotExpired && matchesExpress && sch.express;\n        });\n        const finalSchedules = userRole !== \"SUPER_ADMIN\" && expressId ? filteredSchedules.filter(sch => sch.express.id === expressId) : filteredSchedules;\n        setScheduleList(finalSchedules);\n\n        // Fetch buses\n        const busResponse = await fetch(\"http://localhost:5000/api/tickets/bus\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"X-Express-Id\": expressId || \"\"\n          }\n        });\n        if (!busResponse.ok) throw new Error(\"Cannot fetch bus list\");\n        setBusList(await busResponse.json());\n\n        // Fetch tickets\n        const ticketsResponse = await fetch(\"http://localhost:5000/api/tickets/all\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!ticketsResponse.ok) throw new Error(\"Cannot fetch existing tickets\");\n        setExistingTickets(await ticketsResponse.json());\n        if (userRole !== \"SUPER_ADMIN\" && expressId) {\n          setTicketData(prev => ({\n            ...prev,\n            express: expressId\n          }));\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setLoading(false);\n        alert(error.message);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (!ticketData.schedule) return;\n    const selectedSchedule = scheduleList.find(s => s.id === ticketData.schedule);\n    if (!selectedSchedule || !selectedSchedule.bus) return;\n    const bookedSeats = existingTickets.filter(t => t.schedule.id === ticketData.schedule).map(t => t.seatNo);\n    const remainingSeats = selectedSchedule.bus.busSize - bookedSeats.length;\n    setAvailableSeats(remainingSeats);\n    const nextSeat = [];\n    for (let i = 1; i <= selectedSchedule.bus.busSize; i++) {\n      if (!bookedSeats.includes(i)) {\n        nextSeat.push(i);\n      }\n    }\n    setTicketData(prev => ({\n      ...prev,\n      seatNo: nextSeat.length > 0 ? nextSeat[0] : \"\",\n      busPlateNo: selectedSchedule.bus.plateNo,\n      totalAmount: selectedSchedule.destination.price || 0\n    }));\n  }, [ticketData.schedule, scheduleList, existingTickets]);\n  useEffect(() => {\n    if (role !== \"SUPER_ADMIN\" || !ticketData.express) return;\n    const fetchSchedulesForExpress = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const scheduleResponse = await fetch(\"http://localhost:5000/api/tickets/schedule\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"X-Express-Id\": ticketData.express\n          }\n        });\n        if (!scheduleResponse.ok) throw new Error(\"Cannot fetch schedules for express\");\n        const schedules = await scheduleResponse.json();\n        const today = new Date();\n        const filteredSchedules = schedules.filter(sch => {\n          const scheduleDate = new Date(sch.date);\n          return scheduleDate >= today && sch.express.id === ticketData.express && sch.express;\n        });\n        setScheduleList(filteredSchedules);\n      } catch (error) {\n        console.error(\"Error fetching schedules:\", error);\n        alert(error.message);\n      }\n    };\n    fetchSchedulesForExpress();\n  }, [ticketData.express, role]);\n\n  // ðŸ”¹ Helper: Convert image URL to Base64\n  const getBase64ImageFromUrl = async imageUrl => {\n    const response = await fetch(imageUrl);\n    const blob = await response.blob();\n    return new Promise(resolve => {\n      const reader = new FileReader();\n      reader.onloadend = () => resolve(reader.result);\n      reader.readAsDataURL(blob);\n    });\n  };\n  const generatePDF = async ticket => {\n    const selectedSchedule = scheduleList.find(s => s.id === ticket.schedule.id);\n    const selectedExpress = expressList.find(e => e.id === ticket.express.id);\n    const logoUrl = `http://localhost:5000/uploads/${selectedExpress.expressLogo}`;\n    const doc = new jsPDF();\n    doc.setFontSize(20);\n    doc.text(\"TEGABUS TICKET\", 105, 20, {\n      align: \"center\"\n    });\n\n    // âœ… Add logo safely\n    try {\n      const logoBase64 = await getBase64ImageFromUrl(logoUrl);\n      doc.addImage(logoBase64, \"PNG\", 80, 30, 50, 20);\n    } catch (err) {\n      console.warn(\"Logo could not be loaded:\", err);\n    }\n    doc.setFontSize(16);\n    doc.text(selectedExpress.expressName, 105, 60, {\n      align: \"center\"\n    });\n    doc.line(20, 65, 190, 65);\n    doc.setFontSize(12);\n    doc.text(\"Passenger Details\", 20, 80);\n    doc.autoTable({\n      startY: 90,\n      head: [[\"Field\", \"Value\"]],\n      body: [[\"Name\", ticket.names], [\"Phone\", ticket.phone], [\"Email\", ticket.email || \"-\"]],\n      theme: \"grid\",\n      styles: {\n        fontSize: 10,\n        cellPadding: 2\n      },\n      columnStyles: {\n        0: {\n          cellWidth: 40\n        },\n        1: {\n          cellWidth: 140\n        }\n      }\n    });\n    doc.text(\"Ticket Details\", 20, 130);\n    doc.autoTable({\n      startY: 140,\n      head: [[\"Field\", \"Value\"]],\n      body: [[\"Ticket Number\", ticket.ticketNumber], [\"Schedule\", `${selectedSchedule.destination.fromLocation} to ${selectedSchedule.destination.toLocation}`], [\"Date\", new Date(ticket.date).toLocaleDateString()], [\"Time\", selectedSchedule.time], [\"Bus Plate Number\", ticket.busPlateNo], [\"Seat Number\", ticket.seatNo], [\"Payment Status\", ticket.payState], [\"Total Amount\", `$${ticket.totalAmount}`]],\n      theme: \"grid\",\n      styles: {\n        fontSize: 10,\n        cellPadding: 2\n      },\n      columnStyles: {\n        0: {\n          cellWidth: 40\n        },\n        1: {\n          cellWidth: 140\n        }\n      }\n    });\n    doc.text(\"Thank you for choosing \" + selectedExpress.expressName + \"!\", 105, 220, {\n      align: \"center\"\n    });\n    doc.setFontSize(8);\n    doc.text(\"Please present this ticket during boarding.\", 105, 230, {\n      align: \"center\"\n    });\n\n    // Save PDF\n    doc.save(`ticket_${ticket.ticketNumber}.pdf`);\n\n    // Print\n    const pdfOutput = doc.output(\"bloburl\");\n    const printWindow = window.open(pdfOutput);\n    printWindow.onload = () => {\n      printWindow.print();\n      printWindow.close();\n    };\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTicketData({\n      ...ticketData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!ticketData.seatNo) {\n      return alert(\"No seats available for the selected schedule.\");\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      const payload = {\n        ...ticketData,\n        express: {\n          id: ticketData.express\n        },\n        schedule: {\n          id: ticketData.schedule\n        }\n      };\n      const response = await fetch(\"http://localhost:5000/api/tickets/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText || \"Failed to save ticket\");\n      }\n      const savedTicket = await response.json();\n      alert(\"Ticket added successfully!\");\n\n      // âœ… Generate and print PDF\n      await generatePDF(savedTicket);\n      history.push(\"/admin/tickets\");\n    } catch (error) {\n      console.error(error);\n      alert(\"Error saving ticket: \" + error.message);\n    }\n  };\n  const handleCancel = () => history.push(\"/admin/tickets\");\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center p-6\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 23\n  }, this);\n  return (\n    /*#__PURE__*/\n    // ... rest of your JSX unchanged\n    _jsxDEV(\"div\", {\n      className: \"flex flex-wrap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(TicketAdd, \"umf+ZbE546Wmu9qGtQgv4M6IvJI=\", false, function () {\n  return [useHistory];\n});\n_c = TicketAdd;\nvar _c;\n$RefreshReg$(_c, \"TicketAdd\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","jsPDF","jsxDEV","_jsxDEV","TicketAdd","_s","history","ticketData","setTicketData","names","email","phone","express","schedule","busPlateNo","seatNo","totalAmount","payState","date","expressList","setExpressList","scheduleList","setScheduleList","busList","setBusList","role","setRole","existingTickets","setExistingTickets","loading","setLoading","availableSeats","setAvailableSeats","fetchData","token","localStorage","getItem","expressId","userRole","userObj","user","JSON","parse","toUpperCase","expressResponse","fetch","method","headers","Authorization","ok","Error","expresses","json","scheduleResponse","schedules","today","Date","filteredSchedules","filter","sch","scheduleDate","isNotExpired","matchesExpress","id","finalSchedules","busResponse","ticketsResponse","prev","error","console","alert","message","selectedSchedule","find","s","bus","bookedSeats","t","map","remainingSeats","busSize","length","nextSeat","i","includes","push","plateNo","destination","price","fetchSchedulesForExpress","getBase64ImageFromUrl","imageUrl","response","blob","Promise","resolve","reader","FileReader","onloadend","result","readAsDataURL","generatePDF","ticket","selectedExpress","e","logoUrl","expressLogo","doc","setFontSize","text","align","logoBase64","addImage","err","warn","expressName","line","autoTable","startY","head","body","theme","styles","fontSize","cellPadding","columnStyles","cellWidth","ticketNumber","fromLocation","toLocation","toLocaleDateString","time","save","pdfOutput","output","printWindow","window","open","onload","print","close","handleInputChange","name","value","target","handleSubmit","preventDefault","payload","stringify","errorText","savedTicket","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/AUCA/AUCA INNOVATION CENTER/WebTech/Final/TegaBus/frontend/tegaPortal/src/views/admin/TicketAdd.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\"; // âœ… Fix: just import, no assignment\r\n\r\nexport default function TicketAdd() {\r\n  const history = useHistory();\r\n\r\n  const [ticketData, setTicketData] = useState({\r\n    names: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    express: \"\",\r\n    schedule: \"\",\r\n    busPlateNo: \"\",\r\n    seatNo: \"\",\r\n    totalAmount: 0,\r\n    payState: \"PENDING\",\r\n    date: \"\",\r\n  });\r\n\r\n  const [expressList, setExpressList] = useState([]);\r\n  const [scheduleList, setScheduleList] = useState([]);\r\n  const [busList, setBusList] = useState([]);\r\n  const [role, setRole] = useState(\"\");\r\n  const [existingTickets, setExistingTickets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [availableSeats, setAvailableSeats] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const expressId = localStorage.getItem(\"expressId\");\r\n\r\n        // Fetch user role\r\n        let userRole = \"\";\r\n        const userObj = localStorage.getItem(\"user\");\r\n        if (userObj) {\r\n          const user = JSON.parse(userObj);\r\n          userRole = user.role ? user.role.toUpperCase() : \"\";\r\n        } else {\r\n          userRole = localStorage.getItem(\"role\")\r\n            ? localStorage.getItem(\"role\").toUpperCase()\r\n            : \"\";\r\n        }\r\n        setRole(userRole);\r\n\r\n        // Fetch express list with logos\r\n        const expressResponse = await fetch(\r\n          \"http://localhost:5000/api/express/all\",\r\n          {\r\n            method: \"GET\",\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n        if (!expressResponse.ok) throw new Error(\"Cannot fetch express list\");\r\n        const expresses = await expressResponse.json();\r\n        setExpressList(expresses);\r\n\r\n        // Fetch schedules and filter\r\n        const scheduleResponse = await fetch(\r\n          \"http://localhost:5000/api/tickets/schedule\",\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"X-Express-Id\": expressId || \"\",\r\n            },\r\n          }\r\n        );\r\n        if (!scheduleResponse.ok) throw new Error(\"Cannot fetch schedule list\");\r\n        const schedules = await scheduleResponse.json();\r\n\r\n        const today = new Date();\r\n        const filteredSchedules = schedules.filter((sch) => {\r\n          const scheduleDate = new Date(sch.date);\r\n          const isNotExpired = scheduleDate >= today;\r\n          const matchesExpress =\r\n            userRole === \"SUPER_ADMIN\" ? true : sch.express.id === expressId;\r\n          return isNotExpired && matchesExpress && sch.express;\r\n        });\r\n\r\n        const finalSchedules =\r\n          userRole !== \"SUPER_ADMIN\" && expressId\r\n            ? filteredSchedules.filter((sch) => sch.express.id === expressId)\r\n            : filteredSchedules;\r\n        setScheduleList(finalSchedules);\r\n\r\n        // Fetch buses\r\n        const busResponse = await fetch(\"http://localhost:5000/api/tickets/bus\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"X-Express-Id\": expressId || \"\",\r\n          },\r\n        });\r\n        if (!busResponse.ok) throw new Error(\"Cannot fetch bus list\");\r\n        setBusList(await busResponse.json());\r\n\r\n        // Fetch tickets\r\n        const ticketsResponse = await fetch(\r\n          \"http://localhost:5000/api/tickets/all\",\r\n          {\r\n            method: \"GET\",\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n        if (!ticketsResponse.ok) throw new Error(\"Cannot fetch existing tickets\");\r\n        setExistingTickets(await ticketsResponse.json());\r\n\r\n        if (userRole !== \"SUPER_ADMIN\" && expressId) {\r\n          setTicketData((prev) => ({ ...prev, express: expressId }));\r\n        }\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(false);\r\n        alert(error.message);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!ticketData.schedule) return;\r\n\r\n    const selectedSchedule = scheduleList.find(\r\n      (s) => s.id === ticketData.schedule\r\n    );\r\n    if (!selectedSchedule || !selectedSchedule.bus) return;\r\n\r\n    const bookedSeats = existingTickets\r\n      .filter((t) => t.schedule.id === ticketData.schedule)\r\n      .map((t) => t.seatNo);\r\n\r\n    const remainingSeats = selectedSchedule.bus.busSize - bookedSeats.length;\r\n    setAvailableSeats(remainingSeats);\r\n\r\n    const nextSeat = [];\r\n    for (let i = 1; i <= selectedSchedule.bus.busSize; i++) {\r\n      if (!bookedSeats.includes(i)) {\r\n        nextSeat.push(i);\r\n      }\r\n    }\r\n    setTicketData((prev) => ({\r\n      ...prev,\r\n      seatNo: nextSeat.length > 0 ? nextSeat[0] : \"\",\r\n      busPlateNo: selectedSchedule.bus.plateNo,\r\n      totalAmount: selectedSchedule.destination.price || 0,\r\n    }));\r\n  }, [ticketData.schedule, scheduleList, existingTickets]);\r\n\r\n  useEffect(() => {\r\n    if (role !== \"SUPER_ADMIN\" || !ticketData.express) return;\r\n\r\n    const fetchSchedulesForExpress = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const scheduleResponse = await fetch(\r\n          \"http://localhost:5000/api/tickets/schedule\",\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"X-Express-Id\": ticketData.express,\r\n            },\r\n          }\r\n        );\r\n        if (!scheduleResponse.ok)\r\n          throw new Error(\"Cannot fetch schedules for express\");\r\n        const schedules = await scheduleResponse.json();\r\n\r\n        const today = new Date();\r\n        const filteredSchedules = schedules.filter((sch) => {\r\n          const scheduleDate = new Date(sch.date);\r\n          return (\r\n            scheduleDate >= today &&\r\n            sch.express.id === ticketData.express &&\r\n            sch.express\r\n          );\r\n        });\r\n        setScheduleList(filteredSchedules);\r\n      } catch (error) {\r\n        console.error(\"Error fetching schedules:\", error);\r\n        alert(error.message);\r\n      }\r\n    };\r\n\r\n    fetchSchedulesForExpress();\r\n  }, [ticketData.express, role]);\r\n\r\n  // ðŸ”¹ Helper: Convert image URL to Base64\r\n  const getBase64ImageFromUrl = async (imageUrl) => {\r\n    const response = await fetch(imageUrl);\r\n    const blob = await response.blob();\r\n    return new Promise((resolve) => {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => resolve(reader.result);\r\n      reader.readAsDataURL(blob);\r\n    });\r\n  };\r\n\r\n  const generatePDF = async (ticket) => {\r\n    const selectedSchedule = scheduleList.find(\r\n      (s) => s.id === ticket.schedule.id\r\n    );\r\n    const selectedExpress = expressList.find((e) => e.id === ticket.express.id);\r\n    const logoUrl = `http://localhost:5000/uploads/${selectedExpress.expressLogo}`;\r\n\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(20);\r\n    doc.text(\"TEGABUS TICKET\", 105, 20, { align: \"center\" });\r\n\r\n    // âœ… Add logo safely\r\n    try {\r\n      const logoBase64 = await getBase64ImageFromUrl(logoUrl);\r\n      doc.addImage(logoBase64, \"PNG\", 80, 30, 50, 20);\r\n    } catch (err) {\r\n      console.warn(\"Logo could not be loaded:\", err);\r\n    }\r\n\r\n    doc.setFontSize(16);\r\n    doc.text(selectedExpress.expressName, 105, 60, { align: \"center\" });\r\n    doc.line(20, 65, 190, 65);\r\n\r\n    doc.setFontSize(12);\r\n    doc.text(\"Passenger Details\", 20, 80);\r\n    doc.autoTable({\r\n      startY: 90,\r\n      head: [[\"Field\", \"Value\"]],\r\n      body: [\r\n        [\"Name\", ticket.names],\r\n        [\"Phone\", ticket.phone],\r\n        [\"Email\", ticket.email || \"-\"],\r\n      ],\r\n      theme: \"grid\",\r\n      styles: { fontSize: 10, cellPadding: 2 },\r\n      columnStyles: { 0: { cellWidth: 40 }, 1: { cellWidth: 140 } },\r\n    });\r\n\r\n    doc.text(\"Ticket Details\", 20, 130);\r\n    doc.autoTable({\r\n      startY: 140,\r\n      head: [[\"Field\", \"Value\"]],\r\n      body: [\r\n        [\"Ticket Number\", ticket.ticketNumber],\r\n        [\r\n          \"Schedule\",\r\n          `${selectedSchedule.destination.fromLocation} to ${selectedSchedule.destination.toLocation}`,\r\n        ],\r\n        [\"Date\", new Date(ticket.date).toLocaleDateString()],\r\n        [\"Time\", selectedSchedule.time],\r\n        [\"Bus Plate Number\", ticket.busPlateNo],\r\n        [\"Seat Number\", ticket.seatNo],\r\n        [\"Payment Status\", ticket.payState],\r\n        [\"Total Amount\", `$${ticket.totalAmount}`],\r\n      ],\r\n      theme: \"grid\",\r\n      styles: { fontSize: 10, cellPadding: 2 },\r\n      columnStyles: { 0: { cellWidth: 40 }, 1: { cellWidth: 140 } },\r\n    });\r\n\r\n    doc.text(\r\n      \"Thank you for choosing \" + selectedExpress.expressName + \"!\",\r\n      105,\r\n      220,\r\n      { align: \"center\" }\r\n    );\r\n    doc.setFontSize(8);\r\n    doc.text(\r\n      \"Please present this ticket during boarding.\",\r\n      105,\r\n      230,\r\n      { align: \"center\" }\r\n    );\r\n\r\n    // Save PDF\r\n    doc.save(`ticket_${ticket.ticketNumber}.pdf`);\r\n\r\n    // Print\r\n    const pdfOutput = doc.output(\"bloburl\");\r\n    const printWindow = window.open(pdfOutput);\r\n    printWindow.onload = () => {\r\n      printWindow.print();\r\n      printWindow.close();\r\n    };\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTicketData({ ...ticketData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!ticketData.seatNo) {\r\n      return alert(\"No seats available for the selected schedule.\");\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const payload = {\r\n        ...ticketData,\r\n        express: { id: ticketData.express },\r\n        schedule: { id: ticketData.schedule },\r\n      };\r\n\r\n      const response = await fetch(\r\n        \"http://localhost:5000/api/tickets/register\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify(payload),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(errorText || \"Failed to save ticket\");\r\n      }\r\n\r\n      const savedTicket = await response.json();\r\n      alert(\"Ticket added successfully!\");\r\n\r\n      // âœ… Generate and print PDF\r\n      await generatePDF(savedTicket);\r\n\r\n      history.push(\"/admin/tickets\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Error saving ticket: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => history.push(\"/admin/tickets\");\r\n\r\n  if (loading) return <p className=\"text-center p-6\">Loading...</p>;\r\n\r\n  return (\r\n    // ... rest of your JSX unchanged\r\n    <div className=\"flex flex-wrap\">\r\n      {/* existing JSX form */}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}