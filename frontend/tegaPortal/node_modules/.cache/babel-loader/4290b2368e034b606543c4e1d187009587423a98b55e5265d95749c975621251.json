{"ast":null,"code":"var _jsxFileName = \"D:\\\\AUCA\\\\AUCA INNOVATION CENTER\\\\WebTech\\\\Final\\\\TegaBus\\\\frontend\\\\tegaPortal\\\\src\\\\components\\\\Cards\\\\CardLineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getCurrentWeekRange() {\n  const now = new Date();\n  const dayOfWeek = now.getDay();\n  const start = new Date(now);\n  start.setDate(now.getDate() - (dayOfWeek === 0 ? 6 : dayOfWeek - 1));\n  start.setHours(0, 0, 0, 0);\n  const end = new Date(start);\n  end.setDate(start.getDate() + 6);\n  end.setHours(23, 59, 59, 999);\n  return {\n    start,\n    end\n  };\n}\nexport default function CardLineChart() {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const {\n      start,\n      end\n    } = getCurrentWeekRange();\n    fetch(`/api/reports/date-range?start=${start.getTime()}&end=${end.getTime()}`, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}` // if secured\n      }\n    }).then(res => res.json()).then(tickets => {\n      // Group revenue by day of week\n      const days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n      const revenuePerDay = new Array(7).fill(0);\n      tickets.forEach(ticket => {\n        const d = new Date(ticket.createdAt); // assuming Ticket has createdAt\n        let idx = d.getDay(); // 0=Sun, 6=Sat\n        idx = idx === 0 ? 6 : idx - 1; // shift so Monday=0\n        revenuePerDay[idx] += ticket.price; // assuming Ticket has price\n      });\n      setChartData({\n        labels: days,\n        datasets: [{\n          label: \"Revenue (RWF)\",\n          backgroundColor: \"rgba(59,130,246,0.1)\",\n          borderColor: \"rgb(59,130,246)\",\n          data: revenuePerDay,\n          fill: true,\n          tension: 0.4\n        }]\n      });\n    }).catch(err => console.error(\"Error fetching weekly data:\", err));\n  }, []);\n  useEffect(() => {\n    if (!chartData) return;\n    const ctx = document.getElementById(\"line-chart\").getContext(\"2d\");\n    if (window.myLine) window.myLine.destroy();\n    window.myLine = new Chart(ctx, {\n      type: \"line\",\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    });\n    return () => {\n      if (window.myLine) window.myLine.destroy();\n    };\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative flex flex-col w-full mb-6 shadow-lg rounded bg-blueGray-700\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 flex-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative h-350-px\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"line-chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(CardLineChart, \"90oplSNxmJIDarigP+4GZm4vLv8=\");\n_c = CardLineChart;\nvar _c;\n$RefreshReg$(_c, \"CardLineChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","jsxDEV","_jsxDEV","getCurrentWeekRange","now","Date","dayOfWeek","getDay","start","setDate","getDate","setHours","end","CardLineChart","_s","chartData","setChartData","fetch","getTime","headers","localStorage","getItem","then","res","json","tickets","days","revenuePerDay","Array","fill","forEach","ticket","d","createdAt","idx","price","labels","datasets","label","backgroundColor","borderColor","data","tension","catch","err","console","error","ctx","document","getElementById","getContext","window","myLine","destroy","type","options","responsive","maintainAspectRatio","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/AUCA/AUCA INNOVATION CENTER/WebTech/Final/TegaBus/frontend/tegaPortal/src/components/Cards/CardLineChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"chart.js\";\n\nfunction getCurrentWeekRange() {\n  const now = new Date();\n  const dayOfWeek = now.getDay();\n  const start = new Date(now);\n  start.setDate(now.getDate() - (dayOfWeek === 0 ? 6 : dayOfWeek - 1));\n  start.setHours(0, 0, 0, 0);\n\n  const end = new Date(start);\n  end.setDate(start.getDate() + 6);\n  end.setHours(23, 59, 59, 999);\n\n  return { start, end };\n}\n\nexport default function CardLineChart() {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const { start, end } = getCurrentWeekRange();\n\n    fetch(`/api/reports/date-range?start=${start.getTime()}&end=${end.getTime()}`, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}` // if secured\n      }\n    })\n      .then(res => res.json())\n      .then(tickets => {\n        // Group revenue by day of week\n        const days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n        const revenuePerDay = new Array(7).fill(0);\n\n        tickets.forEach(ticket => {\n          const d = new Date(ticket.createdAt); // assuming Ticket has createdAt\n          let idx = d.getDay(); // 0=Sun, 6=Sat\n          idx = idx === 0 ? 6 : idx - 1; // shift so Monday=0\n          revenuePerDay[idx] += ticket.price; // assuming Ticket has price\n        });\n\n        setChartData({\n          labels: days,\n          datasets: [\n            {\n              label: \"Revenue (RWF)\",\n              backgroundColor: \"rgba(59,130,246,0.1)\",\n              borderColor: \"rgb(59,130,246)\",\n              data: revenuePerDay,\n              fill: true,\n              tension: 0.4,\n            },\n          ],\n        });\n      })\n      .catch(err => console.error(\"Error fetching weekly data:\", err));\n  }, []);\n\n  useEffect(() => {\n    if (!chartData) return;\n\n    const ctx = document.getElementById(\"line-chart\").getContext(\"2d\");\n    if (window.myLine) window.myLine.destroy();\n\n    window.myLine = new Chart(ctx, {\n      type: \"line\",\n      data: chartData,\n      options: { responsive: true, maintainAspectRatio: false }\n    });\n\n    return () => {\n      if (window.myLine) window.myLine.destroy();\n    };\n  }, [chartData]);\n\n  return (\n    <div className=\"relative flex flex-col w-full mb-6 shadow-lg rounded bg-blueGray-700\">\n      <div className=\"p-4 flex-auto\">\n        <div className=\"relative h-350-px\">\n          <canvas id=\"line-chart\"></canvas>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,mBAAmBA,CAAA,EAAG;EAC7B,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,SAAS,GAAGF,GAAG,CAACG,MAAM,CAAC,CAAC;EAC9B,MAAMC,KAAK,GAAG,IAAIH,IAAI,CAACD,GAAG,CAAC;EAC3BI,KAAK,CAACC,OAAO,CAACL,GAAG,CAACM,OAAO,CAAC,CAAC,IAAIJ,SAAS,KAAK,CAAC,GAAG,CAAC,GAAGA,SAAS,GAAG,CAAC,CAAC,CAAC;EACpEE,KAAK,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE1B,MAAMC,GAAG,GAAG,IAAIP,IAAI,CAACG,KAAK,CAAC;EAC3BI,GAAG,CAACH,OAAO,CAACD,KAAK,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAChCE,GAAG,CAACD,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EAE7B,OAAO;IAAEH,KAAK;IAAEI;EAAI,CAAC;AACvB;AAEA,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAM;MAAEU,KAAK;MAAEI;IAAI,CAAC,GAAGT,mBAAmB,CAAC,CAAC;IAE5Cc,KAAK,CAAC,iCAAiCT,KAAK,CAACU,OAAO,CAAC,CAAC,QAAQN,GAAG,CAACM,OAAO,CAAC,CAAC,EAAE,EAAE;MAC7EC,OAAO,EAAE;QACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;MAC7D;IACF,CAAC,CAAC,CACCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,OAAO,IAAI;MACf;MACA,MAAMC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MAC9D,MAAMC,aAAa,GAAG,IAAIC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;MAE1CJ,OAAO,CAACK,OAAO,CAACC,MAAM,IAAI;QACxB,MAAMC,CAAC,GAAG,IAAI3B,IAAI,CAAC0B,MAAM,CAACE,SAAS,CAAC,CAAC,CAAC;QACtC,IAAIC,GAAG,GAAGF,CAAC,CAACzB,MAAM,CAAC,CAAC,CAAC,CAAC;QACtB2B,GAAG,GAAGA,GAAG,KAAK,CAAC,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC,CAAC,CAAC;QAC/BP,aAAa,CAACO,GAAG,CAAC,IAAIH,MAAM,CAACI,KAAK,CAAC,CAAC;MACtC,CAAC,CAAC;MAEFnB,YAAY,CAAC;QACXoB,MAAM,EAAEV,IAAI;QACZW,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,eAAe;UACtBC,eAAe,EAAE,sBAAsB;UACvCC,WAAW,EAAE,iBAAiB;UAC9BC,IAAI,EAAEd,aAAa;UACnBE,IAAI,EAAE,IAAI;UACVa,OAAO,EAAE;QACX,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN9C,SAAS,CAAC,MAAM;IACd,IAAI,CAACiB,SAAS,EAAE;IAEhB,MAAMgC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;IAClE,IAAIC,MAAM,CAACC,MAAM,EAAED,MAAM,CAACC,MAAM,CAACC,OAAO,CAAC,CAAC;IAE1CF,MAAM,CAACC,MAAM,GAAG,IAAIpD,KAAK,CAAC+C,GAAG,EAAE;MAC7BO,IAAI,EAAE,MAAM;MACZb,IAAI,EAAE1B,SAAS;MACfwC,OAAO,EAAE;QAAEC,UAAU,EAAE,IAAI;QAAEC,mBAAmB,EAAE;MAAM;IAC1D,CAAC,CAAC;IAEF,OAAO,MAAM;MACX,IAAIN,MAAM,CAACC,MAAM,EAAED,MAAM,CAACC,MAAM,CAACC,OAAO,CAAC,CAAC;IAC5C,CAAC;EACH,CAAC,EAAE,CAACtC,SAAS,CAAC,CAAC;EAEf,oBACEb,OAAA;IAAKwD,SAAS,EAAC,sEAAsE;IAAAC,QAAA,eACnFzD,OAAA;MAAKwD,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BzD,OAAA;QAAKwD,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAChCzD,OAAA;UAAQ0D,EAAE,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClD,EAAA,CAnEuBD,aAAa;AAAAoD,EAAA,GAAbpD,aAAa;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}