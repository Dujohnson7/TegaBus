{"ast":null,"code":"var _jsxFileName = \"D:\\\\AUCA\\\\AUCA INNOVATION CENTER\\\\WebTech\\\\Final\\\\TegaBus\\\\frontend\\\\tegaPortal\\\\src\\\\components\\\\Cards\\\\CardLineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport Chart from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardBarChart({\n  chartData\n}) {\n  _s();\n  const chartRef = useRef(null); // reference for canvas\n  const chartInstance = useRef(null); // store chart instance\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n    const dataToUse = chartData && chartData.labels && chartData.labels.length > 0 ? chartData : {\n      labels: [],\n      datasets: []\n    };\n    const config = {\n      type: \"bar\",\n      data: dataToUse,\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        title: {\n          display: false\n        },\n        tooltips: {\n          mode: \"index\",\n          intersect: false\n        },\n        hover: {\n          mode: \"nearest\",\n          intersect: true\n        },\n        legend: {\n          labels: {\n            fontColor: \"rgba(0,0,0,.4)\"\n          },\n          align: \"end\",\n          position: \"bottom\"\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              borderDash: [2],\n              color: \"rgba(33, 37, 41, 0.3)\"\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              precision: 0\n            },\n            gridLines: {\n              borderDash: [2],\n              color: \"rgba(33, 37, 41, 0.2)\"\n            }\n          }]\n        }\n      }\n    };\n\n    // Destroy previous instance before creating new one\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n    chartInstance.current = new Chart(chartRef.current.getContext(\"2d\"), config);\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded-t mb-0 px-4 py-3 bg-transparent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"uppercase text-blueGray-400 mb-1 text-xs font-semibold\",\n        children: \"Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-blueGray-700 text-xl font-semibold\",\n        children: \"Ticket Sales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 flex-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative h-350-px\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(CardBarChart, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = CardBarChart;\nvar _c;\n$RefreshReg$(_c, \"CardBarChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","CardBarChart","chartData","_s","chartRef","chartInstance","current","dataToUse","labels","length","datasets","config","type","data","options","maintainAspectRatio","responsive","title","display","tooltips","mode","intersect","hover","legend","fontColor","align","position","scales","xAxes","gridLines","borderDash","color","yAxes","ticks","beginAtZero","precision","destroy","getContext","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["D:/AUCA/AUCA INNOVATION CENTER/WebTech/Final/TegaBus/frontend/tegaPortal/src/components/Cards/CardLineChart.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Chart from \"chart.js\";\n\nexport default function CardBarChart({ chartData }) {\n  const chartRef = useRef(null); // reference for canvas\n  const chartInstance = useRef(null); // store chart instance\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    const dataToUse = chartData && chartData.labels && chartData.labels.length > 0\n      ? chartData\n      : {\n          labels: [],\n          datasets: [],\n        };\n\n    const config = {\n      type: \"bar\",\n      data: dataToUse,\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        title: { display: false },\n        tooltips: { mode: \"index\", intersect: false },\n        hover: { mode: \"nearest\", intersect: true },\n        legend: {\n          labels: { fontColor: \"rgba(0,0,0,.4)\" },\n          align: \"end\",\n          position: \"bottom\",\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                borderDash: [2],\n                color: \"rgba(33, 37, 41, 0.3)\",\n              },\n            },\n          ],\n          yAxes: [\n            {\n              ticks: { beginAtZero: true, precision: 0 },\n              gridLines: {\n                borderDash: [2],\n                color: \"rgba(33, 37, 41, 0.2)\",\n              },\n            },\n          ],\n        },\n      },\n    };\n\n    // Destroy previous instance before creating new one\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n\n    chartInstance.current = new Chart(chartRef.current.getContext(\"2d\"), config);\n\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [chartData]);\n\n  return (\n    <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\n      <div className=\"rounded-t mb-0 px-4 py-3 bg-transparent\">\n        <h6 className=\"uppercase text-blueGray-400 mb-1 text-xs font-semibold\">\n          Performance\n        </h6>\n        <h2 className=\"text-blueGray-700 text-xl font-semibold\">Ticket Sales</h2>\n      </div>\n      <div className=\"p-4 flex-auto\">\n        <div className=\"relative h-350-px\">\n          <canvas ref={chartRef}></canvas>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}